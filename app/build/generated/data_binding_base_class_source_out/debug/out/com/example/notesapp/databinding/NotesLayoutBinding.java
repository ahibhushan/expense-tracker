// Generated by view binder compiler. Do not edit!
package com.example.notesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.notesapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotesLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView menupopupbutton;

  @NonNull
  public final LinearLayout note;

  @NonNull
  public final CardView notecard;

  @NonNull
  public final TextView notecontent;

  @NonNull
  public final TextView notetitle;

  private NotesLayoutBinding(@NonNull RelativeLayout rootView, @NonNull ImageView menupopupbutton,
      @NonNull LinearLayout note, @NonNull CardView notecard, @NonNull TextView notecontent,
      @NonNull TextView notetitle) {
    this.rootView = rootView;
    this.menupopupbutton = menupopupbutton;
    this.note = note;
    this.notecard = notecard;
    this.notecontent = notecontent;
    this.notetitle = notetitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotesLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotesLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notes_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotesLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.menupopupbutton;
      ImageView menupopupbutton = ViewBindings.findChildViewById(rootView, id);
      if (menupopupbutton == null) {
        break missingId;
      }

      id = R.id.note;
      LinearLayout note = ViewBindings.findChildViewById(rootView, id);
      if (note == null) {
        break missingId;
      }

      id = R.id.notecard;
      CardView notecard = ViewBindings.findChildViewById(rootView, id);
      if (notecard == null) {
        break missingId;
      }

      id = R.id.notecontent;
      TextView notecontent = ViewBindings.findChildViewById(rootView, id);
      if (notecontent == null) {
        break missingId;
      }

      id = R.id.notetitle;
      TextView notetitle = ViewBindings.findChildViewById(rootView, id);
      if (notetitle == null) {
        break missingId;
      }

      return new NotesLayoutBinding((RelativeLayout) rootView, menupopupbutton, note, notecard,
          notecontent, notetitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
