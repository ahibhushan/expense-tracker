// Generated by view binder compiler. Do not edit!
package com.example.notesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.notesapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityForgotpasswordBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout centerline3;

  @NonNull
  public final EditText forgotpassword;

  @NonNull
  public final TextView gobacktologin;

  @NonNull
  public final Button passwordrecoverbutton;

  private ActivityForgotpasswordBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout centerline3, @NonNull EditText forgotpassword,
      @NonNull TextView gobacktologin, @NonNull Button passwordrecoverbutton) {
    this.rootView = rootView;
    this.centerline3 = centerline3;
    this.forgotpassword = forgotpassword;
    this.gobacktologin = gobacktologin;
    this.passwordrecoverbutton = passwordrecoverbutton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityForgotpasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityForgotpasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_forgotpassword, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityForgotpasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.centerline3;
      RelativeLayout centerline3 = ViewBindings.findChildViewById(rootView, id);
      if (centerline3 == null) {
        break missingId;
      }

      id = R.id.forgotpassword;
      EditText forgotpassword = ViewBindings.findChildViewById(rootView, id);
      if (forgotpassword == null) {
        break missingId;
      }

      id = R.id.gobacktologin;
      TextView gobacktologin = ViewBindings.findChildViewById(rootView, id);
      if (gobacktologin == null) {
        break missingId;
      }

      id = R.id.passwordrecoverbutton;
      Button passwordrecoverbutton = ViewBindings.findChildViewById(rootView, id);
      if (passwordrecoverbutton == null) {
        break missingId;
      }

      return new ActivityForgotpasswordBinding((RelativeLayout) rootView, centerline3,
          forgotpassword, gobacktologin, passwordrecoverbutton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
